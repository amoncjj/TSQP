# SPDX-License-Identifier: LGPL-3.0-or-later
# PyTorch GPU Server Manifest for Gramine
#
# Project Path: /home/junjie_chen@idm.teecertlabs.com/TSQP
# Python Path: /data1/junjie_chen/.conda/envs/jjchen/bin/python
# Weights Path: /home/junjie_chen@idm.teecertlabs.com/TSQP/weights

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ entrypoint }}"

loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/lib:/usr/{{ arch_libdir }}"
loader.env.HOME = "{{ env.get('HOME', '/home/junjie_chen@idm.teecertlabs.com') }}"
loader.env.LLAMA_MODEL_PATH = "{{ env.get('LLAMA_MODEL_PATH', '/home/junjie_chen@idm.teecertlabs.com/TSQP/weights/llama3.2-1b') }}"
loader.env.LLAMA_GPU_ENDPOINT = "{{ env.get('LLAMA_GPU_ENDPOINT', 'localhost:50051') }}"
loader.env.LLAMA_PROMPT_PATH = "{{ env.get('LLAMA_PROMPT_PATH', 'prompts.txt') }}"
loader.env.LLAMA_TEE_BATCH_SIZE = "{{ env.get('LLAMA_TEE_BATCH_SIZE', '16') }}"
loader.env.LLAMA_MAX_LENGTH = "{{ env.get('LLAMA_MAX_LENGTH', '128') }}"
loader.env.LLAMA_TEMPERATURE = "{{ env.get('LLAMA_TEMPERATURE', '0.7') }}"
loader.env.LLAMA_GPU_RESULT_PATH = "{{ env.get('LLAMA_GPU_RESULT_PATH', 'tee_gpu_benchmark.json') }}"

loader.insecure__use_cmdline_argv = true

fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "/usr", uri = "file:/usr" },
  { path = "/etc", uri = "file:/etc" },
{% for path in python.get_sys_path(entrypoint) %}
  { path = "{{ path }}", uri = "file:{{ path }}" },
{% endfor %}
  { path = "/home/junjie_chen@idm.teecertlabs.com", uri = "file:/home/junjie_chen@idm.teecertlabs.com" },
  { path = "/data1", uri = "file:/data1" },
  { path = "/tmp", uri = "file:/tmp" },
]

sgx.enclave_size = "4G"
sgx.max_threads = 64
sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}

sgx.trusted_files = [
  "file:{{ entrypoint }}",
  "file:{{ gramine.libos }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
{% for path in python.get_sys_path(entrypoint) %}
  "file:{{ path }}{{ '/' if path.is_dir() else '' }}",
{% endfor %}
  "file:server.py",
  "file:msg.proto",
  "file:msg_pb2.py",
  "file:msg_pb2_grpc.py",
]

sgx.allowed_files = [
  "file:tee_gpu_benchmark.json",
  "file:prompts.txt",
  "file:/home/junjie_chen@idm.teecertlabs.com/TSQP/",
  "file:/data1/",
  "file:/tmp/",
  "file:/etc/hosts",
  "file:/etc/resolv.conf",
]
